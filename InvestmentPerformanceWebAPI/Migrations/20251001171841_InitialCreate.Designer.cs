// <auto-generated />
using System;
using InvestmentPerformanceWebAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvestmentPerformanceWebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251001171841_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("InvestmentPerformanceWebAPI.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TransactionTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "International Business Machines",
                            Quantity = 10,
                            Symbol = "IBM",
                            TransactionTime = new DateTime(2025, 10, 1, 17, 18, 40, 881, DateTimeKind.Utc).AddTicks(175),
                            Type = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fidelity Total Market Index Fund",
                            Quantity = 150,
                            Symbol = "FSKAX",
                            TransactionTime = new DateTime(2025, 10, 1, 17, 18, 40, 881, DateTimeKind.Utc).AddTicks(758),
                            Type = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Microsoft",
                            Quantity = 1,
                            Symbol = "MSFT",
                            TransactionTime = new DateTime(2025, 10, 1, 17, 18, 40, 881, DateTimeKind.Utc).AddTicks(761),
                            Type = 0,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("InvestmentPerformanceWebAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "testaccount@test.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEL063horo+HRrTdEbV+L5+8GocegjOlb6XzR0aAzFkKOYs3XFHKtVv2VP9cqng4cwQ==",
                            Username = "testaccount"
                        });
                });

            modelBuilder.Entity("InvestmentPerformanceWebAPI.Models.Transaction", b =>
                {
                    b.HasOne("InvestmentPerformanceWebAPI.Models.User", null)
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InvestmentPerformanceWebAPI.Models.User", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
